@import './variables';
//reset重置
* {
    box-sizing: border-box;
    outline: none;
}

html {
    font-size: 13px;
}
body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background-color: #f1f1f1;
    -webkit-font-smoothing: antialiased;
}

a {
    color: #9999;
}


//生成工具
@each $colorKey, $color in $colors {
    .text-#{$colorKey} {
        color: $color;

    }
    .bg-#{$colorKey} {
        background-color: $color;
    }
}

//text 文字对齐方式
@each $var in (left, center, right) {
    .text-#{$var} {
        text-align: $var !important;
    }
}

//text overflow 文本超长，超过部分显示省略号
.text-ellipsis {
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
     white-space: nowrap;    //不换行
     
}

@each $sizeKey,$size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $size * $base-font-size;
    }
};
//height width
.w-100 {
    width: 100%;
}
.h-100 {
    height: 100%;
}
//flex
//水平方向flex布局
.d-flex {
    display: flex;
};
// 垂直方向flex布局
.flex-column {
    flex-direction: column;
};

.flex-wrap {
  flex-wrap: wrap;
};
// flex-jc，flex-ai 理解为主轴和交叉轴
// 水平布局的时候，jc表示水平方向上的对齐方式，ai表示垂直方向上的对齐方式
// 垂直布局的时候，jc表示垂直方向上的对齐方式，ai表示水平方向上的对齐方式




@each $jcKey,$value in $flex-jc {
    .jc-#{$jcKey} {
        justify-content: $value;
    }
};


@each $aiKey,$value in $flex-ai {
    .ai-#{$aiKey} {
        align-content: $value;
    }
};
//屏幕自动拉伸
.flex-grow-1 {
    flex-grow:1;
}

//margin,padding边距的定义
// spacing
//.mt-1 => margin top level 1
//.pb-2 => padding button level 2

//三层嵌套循环生成  mt-1， 这样的形式
@each $typeKey, $type in $spacing-types {
   @each $directionKey, $direction in $spacing-directions {
       @each $sizeKey, $size in $spacing-sizes {
            // mt-1: margin-top-0.25rem
            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}: $size * $spacing-base-size;
            }
       }
   }
}

//生成不带方位的 m-0 => margin: 0
@each $typeKey, $type in $spacing-types {
        @each $sizeKey, $size in $spacing-sizes {
            //   m-0
             .#{$typeKey}-#{$sizeKey} {
                 #{$type}: $size * $spacing-base-size;
             }
        }

 }

//.mx-1  x表示水平方向左右保持一致 , .my-1 y表示竖直方向左右保持一致
@each $typeKey, $type in $spacing-types {
    @each $sizeKey, $size in $spacing-sizes {
        //   mx-0
         .#{$typeKey}x-#{$sizeKey} {
             #{$type}-left: $size * $spacing-base-size;
             #{$type}-right: $size * $spacing-base-size;
         }
        //   my-1
        .#{$typeKey}y-#{$sizeKey} {
            #{$type}-top: $size * $spacing-base-size;
            #{$type}-button: $size * $spacing-base-size;
        }
    }
};

//按钮
.btn {
    border: none;
    border-radius: 0.1538rem;
    font-size: map-get($font-sizes , 'sm' ) * $base-font-size;
    padding: 0.2rem 0.6rem;
}
//nav
.nav {
    display: flex;
    //justify-content: space-around;
    .nav-item {
        border-bottom: 3px solid  transparent;
        padding: 0.2rem;
        &.active {
            color: map-get($colors, 'primary');
            border-bottom-color: map-get($colors, 'primary');
        }
    };
    &.nav-inverse {
        .nav-item {
            border-bottom: 3px solid transparent;
            padding: 0.2rem;
            &.active{
                color: map-get($colors, 'white');
                border-bottom-color: map-get($colors, 'white');
            }
        }
    }
}

